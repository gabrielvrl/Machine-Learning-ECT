# -*- coding: utf-8 -*-
"""testeantihorarios.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1K8TeH8KHKe1iJGVhth1pcCqv6h3k_LsC
"""

import pandas as pd 
import numpy as np 
import matplotlib.pyplot as plt
from sklearn import datasets, linear_model
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.model_selection import train_test_split

data = pd.read_csv("https://raw.githubusercontent.com/ect-info/ml/master/dados/antihorario002.txt")
data3 = pd.read_csv("https://raw.githubusercontent.com/ect-info/ml/master/dados/antihorario003.txt")

data.describe()

# Create linear regression object
regr = linear_model.LinearRegression()

# Separando os dados para a vari치vel independente e para vari치vel dependete 
x = data.iloc[:,:-1].values
y = data.iloc[:, 1].values

# Train the model using the training sets
regr.fit(x, y)

# Make predictions using the testing set
#y_pred = regr.predict(x)

#print(y)

# Separando os dados para a vari치vel independente e para vari치vel dependete 
x_test = data3.iloc[:,:-1].values
y_test = data3.iloc[:, 1].values

# Make predictions using the testing set
y_pred = regr.predict(x_test)

print(y_test)

print(y_pred)

# The coefficients
print('Coefficients: \n', regr.coef_)
# The mean squared error
print("Mean squared error: %.2f"
#       % mean_squared_error(y_test, y_pred))
# Explained variance score: 1 is perfect prediction
print('Variance score: %.2f' % r2_score(y_test, y_pred))

plt.scatter(x_test, y_test,  color='black')
plt.scatter(x_test, y_pred, color='blue', linewidth=3)

plt.xticks(())
plt.yticks(())

print()

