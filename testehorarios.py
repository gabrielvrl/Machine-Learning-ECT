# -*- coding: utf-8 -*-
"""testehorarios.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YOBXZE5UD4BYq9nPkJmr1KCBLzYr-5ba
"""

import pandas as pd 
import numpy as np 
import matplotlib.pyplot as plt 
from sklearn import datasets, linear_model
from sklearn.metrics import mean_squared_error, r2_score

data = pd.read_csv("https://raw.githubusercontent.com/ect-info/ml/master/dados/horario002.txt") 
data3 = pd.read_csv("https://raw.githubusercontent.com/ect-info/ml/master/dados/horario003.txt")

print(data)

data.describe()

# Create linear regression object
regr = linear_model.LinearRegression()

# Separando os dados para a vari치vel independente e para vari치vel dependete 
x = data.iloc[:,:-1].values
y = data.iloc[:, 1].values

# Separando os dados para a vari치vel independente e para vari치vel dependete 
x3 = data3.iloc[:,:-1].values
y3 = data3.iloc[:, 1].values

# Train the model using the training sets
regr.fit(x, y)

# Make predictions using the testing set
y_pred = regr.predict(x3)

print(y)

print(y_pred)

# The coefficients
print('Coefficients: \n', regr.coef_)
# The mean squared error
print("Mean squared error: %.2f"
#       % mean_squared_error(y3, y_pred))
# Explained variance score: 1 is perfect prediction
print('Variance score: %.2f' % r2_score(y3, y_pred))

#plt.scatter(x, y,  color='black')
#plt.scatter(x, y_pred, color='blue', linewidth=3)

plt.scatter(x3, y3,  color='black')
plt.scatter(x3, y_pred, color='blue', linewidth=3)

plt.xticks(())
plt.yticks(())

plt.show()